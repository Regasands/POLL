import asyncio

from aiogram import Bot, Dispatcher
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery, PollAnswer
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from DB.db_class import *

from CONFIG.data_class import CallBackMarkup
from CONFIG.config import DataCallBack
from CONFIG.formating import *


async def admin(message: Message, state: FSMContext):
    async with AdminWork(message.from_user.id) as admin:
        if await admin.check_admin():     
            keyboard = CallBackMarkup(DataCallBack.ADMIN_FUNC, 1)
            await message.answer("–ü—Ä–∏–≤–µ—Ç –≥–æ—Å–ø–æ–¥–∏–Ω –∞–¥–º–∏–Ω, –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup = await keyboard.get_markup())
        else:
            await message.answer(f'{message.from_user.id}')


async def start(message: Message, state: FSMContext):
    async with ConnectUserToBD(message.from_user.id) as obj_bd_user:
        if not await obj_bd_user.check_user():
            await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ç–æ —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ!')
            user_create = DbCreateUser(message.from_user.id, message.from_user.language_code)
            await user_create()
            await user_create.a()
            await user_create.close()
        keyboard = CallBackMarkup(DataCallBack.GLOBAL_DCITER, 3)
        await state.update_data(con_user=obj_bd_user)
        await message.answer('–ü—Ä–∏–≤–µ—Ç! üëã –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –î–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º, —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ. –í—ã–±–µ—Ä–∏ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:', reply_markup = await keyboard.get_markup())


async def get_data(message: Message, state: FSMContext):
    data = await state.get_data()
    await message.answer(data)
    await message.answer(f'{await state.get_data()}')


async def help(message: Message, state: FSMContext):
    await message.answer('–£ —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã? –û—Ç–ø—Ä–∞–≤—å –∏—Ö –Ω–∞ @Regqwe')


async def news(message: Message, state: FSMContext):
    keyboard = CallBackMarkup({'–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–∞–Ω–∞–ª—É': 'https://t.me/poll_reg'}, row=1, additional_data='url')
    await message.answer('''üîî –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!
        üëâ –ß—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–∏–Ω–æ–∫ –∏ –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:
        üí¨ –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏, —É–ª—É—á—à–µ–Ω–∏—è –∏ –≤–∞–∂–Ω—ã–µ –∞–Ω–æ–Ω—Å—ã! –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ!''', reply_markup = await keyboard.get_markup())


async def tasks(message: Message, state: FSMContext):
    async with ConnectUserToBD(message.from_user.id) as con:
        res = await con.get_chanels()
        if not res:
            await message.answer('–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ–∑–∂–µ')
            return
        dicters_p = {f'–ü–æ–ª—É—á–∏—Ç—å {e['money']} –º–æ–Ω–µ—Ç': e['url'] for e in res}
        keyboard = CallBackMarkup(dicters_p, row=3, additional_data='url')
        await keyboard.other_param_add('check_bonus', '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å')
        await message.answer('–û—Ç–ª–∏—á–Ω–æ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å—ã', reply_markup= await keyboard.get_markup())
        await state.update_data(bonus=res)
        

async def cooperation(message: Message):
    await message.answer('–ü–∏—à–∏—Ç–µ @regqwe')


